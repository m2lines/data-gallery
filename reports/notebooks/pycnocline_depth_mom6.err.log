Traceback (most recent call last):
  File "/home/runner/miniconda3/envs/DGM2lines/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/miniconda3/envs/DGM2lines/lib/python3.9/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/miniconda3/envs/DGM2lines/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/home/runner/miniconda3/envs/DGM2lines/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/home/runner/miniconda3/envs/DGM2lines/lib/python3.9/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/runner/miniconda3/envs/DGM2lines/lib/python3.9/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/miniconda3/envs/DGM2lines/lib/python3.9/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
lat = ds.lat.values
z_l = ds.z_l.values
z_i = dn2.z_i[1:].values

ds_rn = xr.Dataset(
    coords={
        "lat_c": (
            ["lat_c"],
            lat,
        ),
        "lat_g": (
            ["lat_g"],
            lat + 0.5,
        ),
        "z_l": (
            ["z_l"],
            z_l,
        ),
        "z_i": (["z_i"], z_i),
    }
)
grid = Grid(
    ds_rn,
    coords={
        "Y": {"center": "lat_c", "right": "lat_g"},
        "Z": {"inner": "z_l", "outer": "z_i"},
    },
    periodic=False,
)
lev_grid = rho_norm.z_l.broadcast_like(rho_norm)
target_levels = np.arange(0, 1, 0.025)
depth_rho_norm = grid.transform(
    lev_grid, "Z", target_levels, target_data=rho_norm, method="linear"
)
------------------

----- stderr -----
/home/runner/miniconda3/envs/DGM2lines/lib/python3.9/site-packages/xgcm/grid.py:989: FutureWarning: From version 0.8.0 the Axis computation methods will be removed, in favour of using the Grid computation methods instead. i.e. use `Grid.transform` instead of `Axis.transform`
  warnings.warn(
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mImportError[0m                               Traceback (most recent call last)
Cell [0;32mIn[7], line 32[0m
[1;32m     30[0m lev_grid [38;5;241m=[39m rho_norm[38;5;241m.[39mz_l[38;5;241m.[39mbroadcast_like(rho_norm)
[1;32m     31[0m target_levels [38;5;241m=[39m np[38;5;241m.[39marange([38;5;241m0[39m, [38;5;241m1[39m, [38;5;241m0.025[39m)
[0;32m---> 32[0m depth_rho_norm [38;5;241m=[39m [43mgrid[49m[38;5;241;43m.[39;49m[43mtransform[49m[43m([49m
[1;32m     33[0m [43m    [49m[43mlev_grid[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mZ[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mtarget_levels[49m[43m,[49m[43m [49m[43mtarget_data[49m[38;5;241;43m=[39;49m[43mrho_norm[49m[43m,[49m[43m [49m[43mmethod[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mlinear[39;49m[38;5;124;43m"[39;49m
[1;32m     34[0m [43m)[49m

File [0;32m~/miniconda3/envs/DGM2lines/lib/python3.9/site-packages/xgcm/grid.py:2692[0m, in [0;36mGrid.transform[0;34m(self, da, axis, target, **kwargs)[0m
[1;32m   2608[0m [38;5;250m[39m[38;5;124;03m"""Convert an array of data to new 1D-coordinates along `axis`.[39;00m
[1;32m   2609[0m [38;5;124;03mThe method takes a multidimensional array of data `da` and[39;00m
[1;32m   2610[0m [38;5;124;03mtransforms it onto another data_array `target_data` in the[39;00m
[0;32m   (...)[0m
[1;32m   2688[0m 
[1;32m   2689[0m [38;5;124;03m"""[39;00m
[1;32m   2691[0m ax [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39maxes[axis]
[0;32m-> 2692[0m [38;5;28;01mreturn[39;00m [43max[49m[38;5;241;43m.[39;49m[43mtransform[49m[43m([49m[43mda[49m[43m,[49m[43m [49m[43mtarget[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/envs/DGM2lines/lib/python3.9/site-packages/xgcm/grid.py:1002[0m, in [0;36mAxis.transform[0;34m(self, da, target, target_data, method, mask_edges, bypass_checks, suffix)[0m
[1;32m   1000[0m [38;5;66;03m# check optional numba dependency[39;00m
[1;32m   1001[0m [38;5;28;01mif[39;00m numba [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 1002[0m     [38;5;28;01mraise[39;00m [38;5;167;01mImportError[39;00m(
[1;32m   1003[0m         [38;5;124m"[39m[38;5;124mThe transform functionality of xgcm requires numba. Install using `conda install numba`.[39m[38;5;124m"[39m
[1;32m   1004[0m     )
[1;32m   1006[0m [38;5;66;03m# raise error if axis is periodic[39;00m
[1;32m   1007[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_periodic:

[0;31mImportError[0m: The transform functionality of xgcm requires numba. Install using `conda install numba`.

